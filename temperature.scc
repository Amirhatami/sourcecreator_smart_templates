

/*< + params_struct instanceregional />*/
/*< + climate_module_handler instanceregional />*/



/*<  constants singleshot >*/

#define TEMPERATURE_TAG_PUB_NO_CHANGE_INTEVAL (15 * 60 * 1000)
#define TEMPERATURE_TAG_PUB_VALUE_CHANGE 0.2f
/*</ constants >*/



/*<  therm_var singleshot instancelocal >*/

// Thermometer instance
bc_tmp112_t tmp112;
/*</ therm_var >*/

/*<  therm_init singleshot instancelocal >*/

// Initialize thermometer sensor on core module
bc_tmp112_init(&tmp112, BC_I2C_I2C0, 0x49);
/*</ therm_init >*/



/*< variables instanceregional >*/
/*< therm_var instancelocal />*/
/*</ variables >*/



/*< early_inits instanceregional >*/
/*< therm_init instancelocal />*/
/*</ early_inits >*/




/*<  params_struct_members instanceregional >*/
event_param_t /*<@temp_name/>*/;
/*</ params_struct_members >*/



/*< normal_mode singleshot instanceregional >*/
bc_module_climate_set_update_interval_thermometer(UPDATE_NORMAL_INTERVAL);
/*</ normal_mode >*/

/*<  climate_module_init singleshot instanceregional >*/
bc_module_climate_set_update_interval_thermometer(UPDATE_SERVICE_INTERVAL);
/*</ climate_module_init >*/



/*< climate_module_event_handler_case singleshot instanceregional >*/
case BC_MODULE_CLIMATE_EVENT_UPDATE_THERMOMETER:
    if (bc_module_climate_get_temperature_celsius(&value))
    {
        /*< temp_event_handler_case_content broadcast />*/
    }
    break;
/*</ climate_module_event_handler_case >*/

/*< temp_event_handler_case_content instancelocal >*/
if ((fabs(value - params./*<@temp_name/>*/.value) >= TEMPERATURE_TAG_PUB_VALUE_CHANGE) || (params./*<@temp_name/>*/.next_pub < bc_scheduler_get_spin_tick()))
{
    bc_radio_pub_temperature(BC_RADIO_PUB_CHANNEL_R1_I2C0_ADDRESS_DEFAULT, &value);
    params./*<@temp_name/>*/.value = value;
    params./*<@temp_name/>*/.next_pub = bc_scheduler_get_spin_tick() + TEMPERATURE_TAG_PUB_NO_CHANGE_INTEVAL;
}
/*</ temp_event_handler_case_content >*/
